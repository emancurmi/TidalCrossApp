[{"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\index.js":"1","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\App.js":"2","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\reportWebVitals.js":"3","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Nav\\Nav.js":"5","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Footer\\Footer.js":"6","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Home\\Home.js":"7","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Profile\\Profile.js":"8","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignUp\\SignUp.js":"9","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignOut\\SignOut.js":"10","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\engine.js":"11","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\config.js":"12","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignIn\\SignIn.js":"13","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Admin\\Admin.js":"14","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\User\\User.js":"15","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Member\\Member.js":"16","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Loader\\Loader.js":"17","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Dashboard\\Dashboard.js":"18","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\NotFoundPage\\NotFoundPage.js":"19","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\CreateOrderForm\\CreateOrderForm.js":"20","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrdersList\\OrdersList.js":"21","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrderListItem\\OrderListItem.js":"22","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Modal\\Modal.js":"23","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrderDetails\\OrderDetails.js":"24","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Reset\\Reset.js":"25","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Contact\\Contact.js":"26"},{"size":251,"mtime":1613078595629,"results":"27","hashOfConfig":"28"},{"size":2338,"mtime":1613450304334,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":2739,"mtime":1613450145962,"results":"31","hashOfConfig":"28"},{"size":12436,"mtime":1613451378015,"results":"32","hashOfConfig":"28"},{"size":1692,"mtime":1613450495801,"results":"33","hashOfConfig":"28"},{"size":23548,"mtime":1613453362442,"results":"34","hashOfConfig":"28"},{"size":14729,"mtime":1613453985740,"results":"35","hashOfConfig":"28"},{"size":9769,"mtime":1613101663918,"results":"36","hashOfConfig":"28"},{"size":877,"mtime":1611887169645,"results":"37","hashOfConfig":"28"},{"size":1011,"mtime":1609768199644,"results":"38","hashOfConfig":"28"},{"size":283,"mtime":1613275284374,"results":"39","hashOfConfig":"28"},{"size":8284,"mtime":1613282822253,"results":"40","hashOfConfig":"28"},{"size":1982,"mtime":1612801813713,"results":"41","hashOfConfig":"28"},{"size":1682,"mtime":1613157970545,"results":"42","hashOfConfig":"28"},{"size":1499,"mtime":1613282105634,"results":"43","hashOfConfig":"28"},{"size":393,"mtime":1610159531375,"results":"44","hashOfConfig":"28"},{"size":2959,"mtime":1612567108360,"results":"45","hashOfConfig":"28"},{"size":653,"mtime":1610160718582,"results":"46","hashOfConfig":"28"},{"size":5408,"mtime":1613157977041,"results":"47","hashOfConfig":"28"},{"size":13884,"mtime":1613247624952,"results":"48","hashOfConfig":"28"},{"size":3705,"mtime":1613247734228,"results":"49","hashOfConfig":"28"},{"size":426,"mtime":1612933184922,"results":"50","hashOfConfig":"28"},{"size":8735,"mtime":1613282105627,"results":"51","hashOfConfig":"28"},{"size":7537,"mtime":1613283525540,"results":"52","hashOfConfig":"28"},{"size":1097,"mtime":1613450333128,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"qllw1c",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\index.js",[],["116","117"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\App.js",["118"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\reportWebVitals.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Nav\\Nav.js",["119"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Footer\\Footer.js",["120","121"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Home\\Home.js",["122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Profile\\Profile.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignUp\\SignUp.js",["162","163","164"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport config from '../../config';\r\nimport engine from '../../engine';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\nexport default class SignUp extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            config: config,\r\n            userid: '',\r\n            username: '',\r\n            useremail: '',\r\n            userphone: '',\r\n            userpassword: '',\r\n            userrole: '',\r\n            error: null,\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    addUser = user => {\r\n        this.setState({\r\n            userid: user.userid,\r\n            username: user.username,\r\n            useremail: user.email,\r\n            userphone: user.phone,\r\n            userpassword: user.userpassword,\r\n            userrole: user.userrole,\r\n        })\r\n        bake_cookie(config.cookie_key, engine.encrypt(this.state.userid.toString()));\r\n        this.props.handleLogIn();\r\n        this.renderRedirect()\r\n    }\r\n\r\n\r\n    renderRedirect = () => {\r\n        if (read_cookie(config.cookie_key).length !== 0) {\r\n            return <Redirect to='/dashboard/' />\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { regusername, reguserphone, reguseremail, reguserpassword, regisshop } = e.target;\r\n\r\n        let selectedrole = \"user\"\r\n\r\n        if (regisshop.checked === true) {\r\n            selectedrole = \"member\";\r\n        }\r\n\r\n        console.log(selectedrole);\r\n\r\n        const user = {\r\n            username: regusername.value,\r\n            useremail: reguseremail.value.toLowerCase(),\r\n            userphone: reguserphone.value,\r\n            userpassword: reguserpassword.value,\r\n            userrole: selectedrole\r\n        }\r\n\r\n        this.setState({ error: null })\r\n\r\n        fetch(this.state.config.API_ENDPOINT + 'user/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        })\r\n\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error));\r\n                }\r\n                return res.json();\r\n            })\r\n\r\n            .then(data => {\r\n                regusername.value = '';\r\n                reguseremail.value = '';\r\n                reguserphone.value = '';\r\n                reguserpassword.value = '';\r\n                this.addUser(data);\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error);\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    showerror = () => {\r\n        if (this.state.error != null) {\r\n            return (<p>{this.state.error}</p>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"page-content\">\r\n\r\n                <div className=\"content-wrapper\">\r\n\r\n                    <div className=\"content d-flex justify-content-center align-items-center\">\r\n\r\n                        <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"card mb-0\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center mb-3\">\r\n                                        <i className=\"icon-reading icon-2x text-slate-300 border-slate-300 border-3 rounded-round p-3 mb-3 mt-1\"></i>\r\n                                        <h5 className=\"mb-0\">Create a new account</h5>\r\n                                        <span className=\"d-block text-muted\">Your credentials</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Name\" id=\"regusername\" pattern=\"[A-Za-z\\s]+\" name=\"regusername\" required />\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-user text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"email\" className=\"form-control\" placeholder=\"E-mail Address\" id=\"reguseremail\" name=\"reguseremail\" required />\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-envelope text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"phone\" className=\"form-control\" placeholder=\"Phone\" id=\"reguserphone\" name=\"reguserphone\" required />\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-phone text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" id=\"userpassword\" name=\"userpassword\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required />\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-lock2 text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group d-flex align-items-center\">\r\n                                        <div className=\"form-check mb-0\">\r\n                                            <label className=\"form-check-label\">\r\n                                                <input type=\"checkbox\" name=\"remember\" id=\"regisshop\" name=\"regisshop\" className=\"form-input-styled\" />\r\n                                                            Register as a store\r\n\t\t\t\t\t\t\t\t\t        </label>\r\n                                        </div>\r\n\r\n                                        {/*<a href=\"login_password_recover.html\" className=\"ml-auto\">Forgot password?</a>*/}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button type=\"submit\" id=\"btnRegisterSubmit\" className=\"btn btn-primary btn-block\">Sign Up <i className=\"icon-circle-right2 ml-2\"></i></button>\r\n                                    </div>\r\n\r\n                                    {this.showerror()}\r\n\r\n                                    <div className=\"form-group text-center text-muted content-divider\">\r\n                                        <span className=\"px-2\">Already have an account?</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <a href=\"/Signin\" className=\"btn btn-light btn-block\">Sign In</a>\r\n                                    </div>\r\n\r\n                                    <span className=\"form-text text-center text-muted\">By continuing, you're confirming that you've read our <a href=\"#\">Terms &amp; Conditions</a> and <a href=\"#\">Cookie Policy</a></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.renderRedirect()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            //<div className=\"column center\">\r\n            //    <div className=\"white\">\r\n            //        <div className=\"row center\">\r\n            //            <div className=\"col-1\">\r\n            //                {this.renderRedirect()}\r\n            //                <h1>Register</h1>\r\n            //                <form onSubmit={this.handleSubmit} >\r\n            //                    <input type=\"text\" id=\"regusername\" name=\"regusername\" placeholder=\"Name\" pattern=\"[A-Za-z\\s]+\" title=\"User name should be made up of Capital and small letters Only\" required /><br />\r\n            //                    <input type=\"email\" id=\"reguseremail\" name=\"reguseremail\" placeholder=\"E-mail\" title=\"Enter email address\" required /><br />\r\n            //                    <input type=\"phone\" id=\"reguserphone\" name=\"reguserphone\" placeholder=\"Phone\" title=\"Enter phone number\" required /><br />\r\n            //                    <input type=\"password\" id=\"reguserpassword\" name=\"reguserpassword\" placeholder=\"Password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n            //                        title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\" required /><br />\r\n            //                    <input type=\"checkbox\" id=\"regisshop\" name=\"regisshop\" value=\"member\"/><label for=\"regisshop\">Register as Shop</label><br/>\r\n            //                    <button id=\"btnRegisterSubmit\" className=\"black\" type=\"submit\">Register</button>\r\n            //                </form>\r\n            //                {this.showerror()}\r\n            //                <a href=\"/SignIn\"> Already have an account? Sign In</a>\r\n            //            </div>\r\n            //        </div>\r\n            //    </div>\r\n            //</div>\r\n        )\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignOut\\SignOut.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\engine.js",["165"],"export default {\r\n\r\n    encrypt(content) {\r\n        let result = [];\r\n        let passcode = \"FUtruJistob\";\r\n        let passLen = passcode.length;\r\n\r\n\r\n        for (let i = 0; i < content.length; i++) {\r\n            let passOffset = i % passLen;\r\n            let calAscii = (content.charCodeAt(i) + passcode.charCodeAt(passOffset));\r\n            result.push(calAscii);\r\n        }\r\n\r\n        return JSON.stringify(result);\r\n    },\r\n\r\n    decrypt(content) {\r\n        let result = [];\r\n        let str = '';\r\n        let passcode = \"FUtruJistob\";\r\n        let codesArr = JSON.parse(content);\r\n        let passLen = passcode.length;\r\n\r\n\r\n        for (let i = 0; i < codesArr.length; i++) {\r\n            let passOffset = i % passLen;\r\n            let calAscii = (codesArr[i] - passcode.charCodeAt(passOffset));\r\n            result.push(calAscii);\r\n        }\r\n        for (let i = 0; i < result.length; i++) {\r\n            let ch = String.fromCharCode(result[i]); str += ch;\r\n        }\r\n        return str;\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\config.js",["166"],"export default {\r\n    API_ENDPOINT: 'https://tidalcrossapi.herokuapp.com/api/',\r\n    //API_ENDPOINT: 'http://localhost:8000/api/',\r\n    API_SECURITY: '6Em3brlzepetr5sw6z2y',\r\n    API_TOKEN: '$2a$10$ra1z0n2XnSnbMP/ipTMHeOqqrI7i8Rssm/z8MHTxgb7LamV7LpfXu',\r\n    cookie_key: 'idcrypt'\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignIn\\SignIn.js",["167","168"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport config from '../../config';\r\nimport engine from '../../engine';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\nimport crypto from 'crypto';\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            config: config,\r\n            userid: '',\r\n            useremail: '',\r\n            userpassword: '',\r\n            username: '',\r\n            userrole: '',\r\n            error: null,\r\n            isLoading: true,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    setUser = user => {\r\n        this.setState({\r\n            userid: user[0].userid,\r\n            useremail: user[0].useremail,\r\n            userpassword: user[0].userpassword,\r\n            error: null,\r\n            isLoading: false,\r\n            redirect: true\r\n        })\r\n        bake_cookie(config.cookie_key, engine.encrypt(this.state.userid.toString()));\r\n        this.props.handleLogIn();\r\n        this.renderRedirect()\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (read_cookie(config.cookie_key).length !== 0) {\r\n            return <Redirect to='/Dashboard/' />\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        const { useremail, userpassword } = e.target;\r\n\r\n        const user = {\r\n            useremail: useremail.value.toLowerCase(),\r\n            userpassword: userpassword.value\r\n        }\r\n\r\n        this.setState({ error: null })\r\n\r\n        fetch(this.state.config.API_ENDPOINT + 'user/?useremail=' + user.useremail, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${this.state.config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n\r\n            .then(data => {\r\n                if (data.length !== 0) {\r\n                    let hexpassword = crypto.createHash('sha1').update(user.userpassword + config.API_SECURITY + data[0].userhex).digest('hex');\r\n\r\n                    if (data[0].userhexpassword === hexpassword) {\r\n                        useremail.value = '';\r\n                        userpassword.value = '';\r\n                        this.setUser(data);\r\n                    }\r\n                    else {\r\n                        this.setState({ error: \"User Information Incorrect\" });\r\n                    }\r\n                }\r\n                else {\r\n                    console.error(\"User not found!\")\r\n                    this.setState({ error: \"User not found!\" });\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error)\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    showerror = () => {\r\n        if (this.state.error != null) {\r\n            return (\r\n                <div className=\"form-group text-center\">\r\n                    {this.state.error}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderRedirect();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"page-content\">\r\n\r\n                <div className=\"content-wrapper\">\r\n\r\n                    <div className=\"content d-flex justify-content-center align-items-center\">\r\n\r\n                        <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"card mb-0\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center mb-3\">\r\n                                        <i className=\"icon-reading icon-2x text-slate-300 border-slate-300 border-3 rounded-round p-3 mb-3 mt-1\"></i>\r\n                                        <h5 className=\"mb-0\">Login to your account</h5>\r\n                                        <span className=\"d-block text-muted\">Your credentials</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"E-mail Address\" id=\"useremail\" name=\"useremail\" required/>\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-user text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" id=\"userpassword\" name=\"userpassword\" required />\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-lock2 text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group d-flex align-items-center\">\r\n                                        {/*<div className=\"form-check mb-0\">\r\n                                            <label className=\"form-check-label\">\r\n                                                <input type=\"checkbox\" name=\"remember\" className=\"form-input-styled\" checked />\r\n                                                            Remember\r\n\t\t\t\t\t\t\t\t\t        </label>\r\n                                        </div>*/}\r\n\r\n                                        <a href=\"/Reset\" className=\"ml-auto\">Forgot password?</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button type=\"submit\" id=\"btnLoginSubmit\" className=\"btn btn-primary btn-block\">Sign in <i className=\"icon-circle-right2 ml-2\"></i></button>\r\n                                    </div>\r\n\r\n                                    {this.showerror()}\r\n\r\n                                    <div className=\"form-group text-center text-muted content-divider\">\r\n                                        <span className=\"px-2\">Don't have an account?</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <a href=\"/SignUp\" className=\"btn btn-light btn-block\">Sign up</a>\r\n                                    </div>\r\n\r\n                                    <span className=\"form-text text-center text-muted\">By continuing, you're confirming that you've read our <a href=\"#\">Terms &amp; Conditions</a> and <a href=\"#\">Cookie Policy</a></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.renderRedirect()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            //<div className=\"column center\">\r\n            //    <div className=\"white\">\r\n            //        <div className=\"row center\">\r\n            //            <div className=\"col-1\">\r\n            //                <h1>Login</h1>\r\n            //                <form onSubmit={this.handleSubmit} >\r\n            //                    <input type=\"Text\" id=\"useremail\" name=\"useremail\" placeholder=\"Email Address\" title=\"Enter Phone Number\" required /><br />\r\n            //                    <input type=\"Password\" id=\"userpassword\" name=\"userpassword\" placeholder=\"Password\" title=\"Enter Pin Number\" required /><br />\r\n            //                    <button id=\"btnLoginSubmit\" className=\"black\" type=\"submit\">Sign In</button>\r\n            //                </form>\r\n            //                {this.showerror()}\r\n            //                {this.renderRedirect()}\r\n            //                <a href=\"/SignUp\"> Don't have an account? Register</a>\r\n            //            </div>\r\n            //        </div>\r\n            //    </div>\r\n            //</div>\r\n        )\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Admin\\Admin.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\User\\User.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Member\\Member.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Loader\\Loader.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\NotFoundPage\\NotFoundPage.js",[],["169","170"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\CreateOrderForm\\CreateOrderForm.js",["171","172"],"import React, { Component } from 'react';\r\nimport config from '../../config';\r\nimport engine from '../../engine';\r\nimport { read_cookie } from 'sfcookies';\r\nimport Loader from '../Loader/Loader';\r\nimport Modal from '../Modal/Modal';\r\n\r\n\r\nexport default class CreateOrderForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userid: engine.decrypt(read_cookie(config.cookie_key)),\r\n            selectedshop:\r\n            {\r\n                shopid: 0,\r\n                shopname: 'Select Shop'\r\n            },\r\n            shops: [],\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        });\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: data\r\n        })\r\n    }\r\n\r\n    setShopData = data => {\r\n        this.setState({\r\n            shops: data\r\n        })\r\n    }\r\n\r\n    fetchshops = () => {\r\n        this.setIsLoading(true);\r\n\r\n        fetch(config.API_ENDPOINT + 'user/?userrole=member', {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setShopData(data)\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n\r\n        this.setIsLoading(false);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { orderbox } = e.target;\r\n        const order = {\r\n            ordershopid: this.state.selectedshop.shopid,\r\n            orderuserid: parseInt(this.state.userid),\r\n            orderdata: orderbox.value,\r\n        }\r\n\r\n        if (order.ordershopid === 0) {\r\n            this.setState({ error: \"Select Shop\" });\r\n        }\r\n        else {\r\n            console.log(order);\r\n            fetch(config.API_ENDPOINT + 'order/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(order),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'authorization': `bearer ${config.API_TOKEN}`\r\n                }\r\n            })\r\n\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        return res.json().then(error => Promise.reject(error));\r\n                    }\r\n                    return res.json();\r\n                })\r\n\r\n                .then(data => {\r\n                    orderbox.value = \"\";\r\n                })\r\n\r\n                .catch(error => {\r\n                    this.setState({ error })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    handleShopSelect = (e) => {\r\n        const shopSel = e.target.value;\r\n        this.state.shops.map(shop => {\r\n            if (shop.username === shopSel) {\r\n                this.setState({\r\n                    selectedshop: {\r\n                        shopid: shop.userid,\r\n                        shopname: shop.username\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        console.log(this.state.selectedshop);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchshops();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Loader loadingtype={\"Loading Form\"} />\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <div class=\"card\">\r\n                    <div class=\"card-header header-elements-inline\">\r\n                        <h5 class=\"card-title\">Create new order</h5>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control\" name=\"Countries\" onChange={e => this.handleShopSelect(e)} value={this.state.selectedshop.shopname}>\r\n                                    <option value=\"\">Select the Shop</option>\r\n                                    {this.state.shops.map((shop, key) => (\r\n                                        <option key={key} value={shop.username}>\r\n                                            {shop.username}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Your Order:</label>\r\n                                <textarea id=\"orderbox\" name=\"orderbox\" rows=\"5\" cols=\"5\" className=\"form-control\" placeholder=\"Enter your order here\" required></textarea>\r\n                            </div>\r\n\r\n                            <div class=\"text-right\">\r\n                                <button id=\"btnOrderSubmit\" type=\"submit\" className=\"btn btn-primary\">Submit Order <i class=\"icon-paperplane ml-2\"></i></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrdersList\\OrdersList.js",["173"],"import React, { Component } from 'react';\r\nimport config from '../../config';\r\nimport OrderListItem from '../OrderListItem/OrderListItem';\r\n\r\nexport default class OrdersList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userid: this.props.userid,\r\n            shopid: this.props.shopid,\r\n            orders: [],\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: data\r\n        })\r\n    }\r\n\r\n    setOrderData = data => {\r\n        this.setState({\r\n            orders: data\r\n        })\r\n    }\r\n\r\n    fetchordersbyuser = (userid) => {\r\n        this.setIsLoading(true);\r\n\r\n        fetch(config.API_ENDPOINT + 'order?userid=' + userid, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setOrderData(data)\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n\r\n        this.setIsLoading(false);\r\n    }\r\n\r\n    fetchordersbyshop = (shopid) => {\r\n        this.setIsLoading(true);\r\n\r\n        fetch(config.API_ENDPOINT + 'order?shopid=' + shopid, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setOrderData(data)\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n\r\n        this.setIsLoading(false);\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.userid != null) { this.fetchordersbyuser(this.state.userid) }\r\n        if (this.state.shopid != null) { this.fetchordersbyshop(this.state.shopid) }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.userid != null) { this.fetchordersbyuser(this.state.userid) }\r\n        if (this.state.shopid != null) { this.fetchordersbyshop(this.state.shopid) }\r\n\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            10000\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header header-elements-sm-inline\">\r\n                    <h6 className=\"card-title\">Support tickets</h6>\r\n                    <div className=\"header-elements\"></div>\r\n                </div>\r\n\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table text-nowrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Due</th>\r\n                                <th>User</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr className=\"table-active table-border-double\">\r\n                                <td colSpan=\"3\">Active tickets</td>\r\n                                <td className=\"text-right\">\r\n                                    <span className=\"badge bg-blue badge-pill\">{this.state.orders !== undefined ? this.state.orders.length : 0}</span>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            {this.state.orders.map(order => {\r\n                                if (this.props.userid != null) {\r\n                                    return (\r\n                                        <OrderListItem key={order.orderid} id={order.orderid} status={order.orderstatus} date={order.orderdate.split('T')[0]} orderdata={order.orderdata} user={order.ordershopid} />\r\n                                    )\r\n                                }\r\n                                else if (this.props.shopid != null) {\r\n                                    return (\r\n                                        <OrderListItem key={order.orderid} id={order.orderid} status={order.orderstatus} date={order.orderdate.split('T')[0]} user={order.orderuserid} />\r\n                                    )\r\n                                }\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//to be continued\r\n//<tr className=\"table-active table-border-double\">\r\n//\t<td colSpan=\"3\">Resolved tickets</td>\r\n//\t<td className=\"text-right\">\r\n//\t\t<span className=\"badge bg-success badge-pill\">42</span>\r\n//\t</td>\r\n//</tr>\r\n\r\n//\t<tr>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<i className=\"icon-checkmark3 text-success\"></i>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<div className=\"d-flex align-items-center\">\r\n//\t\t\t\t<div className=\"mr-3\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"btn bg-success-400 rounded-round btn-icon btn-sm\">\r\n//\t\t\t\t\t\t<span className=\"letter-icon\"></span>\r\n//\t\t\t\t\t</a>\r\n//\t\t\t\t</div>\r\n//\t\t\t\t<div>\r\n//\t\t\t\t\t<a href=\"#\" className=\"text-default font-weight-semibold letter-icon-title\">Alan Macedo</a>\r\n//\t\t\t\t\t<div className=\"text-muted font-size-sm\"><span className=\"badge badge-mark border-success mr-1\"></span> Resolved</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<a href=\"#\" className=\"text-default\">\r\n//\t\t\t\t<div>[#1046] Avoid some unnecessary HTML string</div>\r\n//\t\t\t\t<span className=\"text-muted\">Rather than building a string of HTML and then parsing it...</span>\r\n//\t\t\t</a>\r\n//\t\t</td>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<div className=\"list-icons\">\r\n//\t\t\t\t<div className=\"dropdown\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"list-icons-item dropdown-toggle caret-0\" data-toggle=\"dropdown\"><i className=\"icon-menu7\"></i></a>\r\n//\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-undo\"></i> Quick reply</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-history\"></i> Full history</a>\r\n//\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-plus3 text-blue\"></i> Unresolve issue</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-cross2 text-danger\"></i> Close issue</a>\r\n//\t\t\t\t\t</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t</tr>\r\n\r\n//\t<tr>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<i className=\"icon-checkmark3 text-success\"></i>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<div className=\"d-flex align-items-center\">\r\n//\t\t\t\t<div className=\"mr-3\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"btn bg-pink-400 rounded-round btn-icon btn-sm\">\r\n//\t\t\t\t\t\t<span className=\"letter-icon\"></span>\r\n//\t\t\t\t\t</a>\r\n//\t\t\t\t</div>\r\n//\t\t\t\t<div>\r\n//\t\t\t\t\t<a href=\"#\" className=\"text-default font-weight-semibold letter-icon-title\">Brett Castellano</a>\r\n//\t\t\t\t\t<div className=\"text-muted font-size-sm\"><span className=\"badge badge-mark border-success mr-1\"></span> Resolved</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<a href=\"#\" className=\"text-default\">\r\n//\t\t\t\t<div>[#1038] Update json configuration</div>\r\n//\t\t\t\t<span className=\"text-muted\">The <code>files</code> property is necessary to override the files property...</span>\r\n//\t\t\t</a>\r\n//\t\t</td>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<div className=\"list-icons\">\r\n//\t\t\t\t<div className=\"dropdown\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"list-icons-item dropdown-toggle caret-0\" data-toggle=\"dropdown\"><i className=\"icon-menu7\"></i></a>\r\n//\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-undo\"></i> Quick reply</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-history\"></i> Full history</a>\r\n//\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-plus3 text-blue\"></i> Unresolve issue</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-cross2 text-danger\"></i> Close issue</a>\r\n//\t\t\t\t\t</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t</tr>\r\n\r\n//\t<tr>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<i className=\"icon-checkmark3 text-success\"></i>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<div className=\"d-flex align-items-center\">\r\n//\t\t\t\t<div className=\"mr-3\">\r\n//\t\t\t\t\t<a href=\"#\">\r\n//\t\t\t\t\t\t<img src=\"../../../../global_assets/images/placeholders/placeholder.jpg\" className=\"rounded-circle\" width=\"32\" height=\"32\" alt=\"\" />\r\n//\t\t\t\t\t</a>\r\n//\t\t\t\t</div>\r\n//\t\t\t\t<div>\r\n//\t\t\t\t\t<a href=\"#\" className=\"text-default font-weight-semibold\">Roxanne Forbes</a>\r\n//\t\t\t\t\t<div className=\"text-muted font-size-sm\"><span className=\"badge badge-mark border-success mr-1\"></span> Resolved</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<a href=\"#\" className=\"text-default\">\r\n//\t\t\t\t<div>[#1034] Tooltip multiple event</div>\r\n//\t\t\t\t<span className=\"text-muted\">Fix behavior when using tooltips and popovers that are...</span>\r\n//\t\t\t</a>\r\n//\t\t</td>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<div className=\"list-icons\">\r\n//\t\t\t\t<div className=\"dropdown\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"list-icons-item dropdown-toggle caret-0\" data-toggle=\"dropdown\"><i className=\"icon-menu7\"></i></a>\r\n//\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-undo\"></i> Quick reply</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-history\"></i> Full history</a>\r\n//\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-plus3 text-blue\"></i> Unresolve issue</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-cross2 text-danger\"></i> Close issue</a>\r\n//\t\t\t\t\t</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t</tr>\r\n\r\n//\t<tr className=\"table-active table-border-double\">\r\n//\t\t<td colSpan=\"3\">Closed tickets</td>\r\n//\t\t<td className=\"text-right\">\r\n//\t\t\t<span className=\"badge bg-danger badge-pill\">37</span>\r\n//\t\t</td>\r\n//\t</tr>\r\n\r\n//\t<tr>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<i className=\"icon-cross2 text-danger-400\"></i>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<div className=\"d-flex align-items-center\">\r\n//\t\t\t\t<div className=\"mr-3\">\r\n//\t\t\t\t\t<a href=\"#\">\r\n//\t\t\t\t\t\t<img src=\"../../../../global_assets/images/placeholders/placeholder.jpg\" className=\"rounded-circle\" width=\"32\" height=\"32\" alt=\"\" />\r\n//\t\t\t\t\t</a>\r\n//\t\t\t\t</div>\r\n//\t\t\t\t<div>\r\n//\t\t\t\t\t<a href=\"#\" className=\"text-default font-weight-semibold\">Mitchell Sitkin</a>\r\n//\t\t\t\t\t<div className=\"text-muted font-size-sm\"><span className=\"badge badge-mark border-danger mr-1\"></span> Closed</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<a href=\"#\" className=\"text-default\">\r\n//\t\t\t\t<div>[#1040] Account for static form controls in form group</div>\r\n//\t\t\t\t<span className=\"text-muted\">Resizes control label's font-size and account for the standard...</span>\r\n//\t\t\t</a>\r\n//\t\t</td>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<div className=\"list-icons\">\r\n//\t\t\t\t<div className=\"dropdown\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"list-icons-item dropdown-toggle caret-0\" data-toggle=\"dropdown\"><i className=\"icon-menu7\"></i></a>\r\n//\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-undo\"></i> Quick reply</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-history\"></i> Full history</a>\r\n//\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-plus3 text-blue\"></i> Unresolve issue</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-spinner11 text-grey\"></i> Reopen issue</a>\r\n//\t\t\t\t\t</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t</tr>\r\n\r\n//\t<tr>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<i className=\"icon-cross2 text-danger\"></i>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<div className=\"d-flex align-items-center\">\r\n//\t\t\t\t<div className=\"mr-3\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"btn bg-brown-400 rounded-round btn-icon btn-sm\">\r\n//\t\t\t\t\t\t<span className=\"letter-icon\"></span>\r\n//\t\t\t\t\t</a>\r\n//\t\t\t\t</div>\r\n//\t\t\t\t<div>\r\n//\t\t\t\t\t<a href=\"#\" className=\"text-default font-weight-semibold letter-icon-title\">Katleen Jensen</a>\r\n//\t\t\t\t\t<div className=\"text-muted font-size-sm\"><span className=\"badge badge-mark border-danger mr-1\"></span> Closed</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t\t<td>\r\n//\t\t\t<a href=\"#\" className=\"text-default\">\r\n//\t\t\t\t<div>[#1038] Proper sizing of form control feedback</div>\r\n//\t\t\t\t<span className=\"text-muted\">Feedback icon sizing inside a larger/smaller form-group...</span>\r\n//\t\t\t</a>\r\n//\t\t</td>\r\n//\t\t<td className=\"text-center\">\r\n//\t\t\t<div className=\"list-icons\">\r\n//\t\t\t\t<div className=\"dropdown\">\r\n//\t\t\t\t\t<a href=\"#\" className=\"list-icons-item dropdown-toggle caret-0\" data-toggle=\"dropdown\"><i className=\"icon-menu7\"></i></a>\r\n//\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-undo\"></i> Quick reply</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-history\"></i> Full history</a>\r\n//\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-plus3 text-blue\"></i> Unresolve issue</a>\r\n//\t\t\t\t\t\t<a href=\"#\" className=\"dropdown-item\"><i className=\"icon-spinner11 text-grey\"></i> Reopen issue</a>\r\n//\t\t\t\t\t</div>\r\n//\t\t\t\t</div>\r\n//\t\t\t</div>\r\n//\t\t</td>\r\n//\t</tr>","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrderListItem\\OrderListItem.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Modal\\Modal.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrderDetails\\OrderDetails.js",["174"],"import React, { Component } from 'react';\r\nimport config from '../../config';\r\nimport Loader from '../Loader/Loader';\r\nimport { read_cookie } from 'sfcookies';\r\nimport engine from '../../engine';\r\n\r\nexport default class OrderDetails extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            order: this.fetchorder(new URLSearchParams(window.location.search).get('orderid')),\r\n            user: {},\r\n            userid: engine.decrypt(read_cookie(config.cookie_key)),\r\n            currentuser: {},\r\n            error: null,\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: data\r\n        })\r\n    }\r\n\r\n    setUserData = data => {\r\n        this.setState({\r\n            user: data\r\n        })\r\n    }\r\n\r\n    setCurrentUserData = data => {\r\n        this.setState({\r\n            currentuser: data\r\n        })\r\n    }\r\n\r\n    setOrderData = data => {\r\n        this.setState({\r\n            order: data\r\n        })\r\n        this.fetchuser(this.state.order.orderuserid);\r\n    }\r\n\r\n    fetchorder = (orderid) => {\r\n        fetch(config.API_ENDPOINT + 'order/' + orderid, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setOrderData(data)\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    fetchuser = (userid) => {\r\n        fetch(config.API_ENDPOINT + 'user/' + userid, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setUserData(data);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    fetchcurrentuser = (userid) => {\r\n        fetch(config.API_ENDPOINT + 'user/' + userid, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setCurrentUserData(data);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    markcompleted = () => {\r\n        this.setIsLoading(true);\r\n\r\n        const order = {\r\n            orderstatus: \"Completed\",\r\n        }\r\n\r\n        fetch(config.API_ENDPOINT + `order/${this.state.order.orderid}`, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify(order),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `Bearer ${config.API_TOKEN}`\r\n            },\r\n        })\r\n            .then(res => {\r\n                if (!res.ok)\r\n                    return res.json().then(error => Promise.reject(error))\r\n            })\r\n\r\n            .then(\r\n                this.setIsLoading(false)\r\n            )\r\n            .then(\r\n                this.goback()\r\n            )\r\n\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    goback = () => {\r\n        this.props.history.push('/dashboard');\r\n    }\r\n\r\n    showbuttons() {\r\n        if (this.state.currentuser.userrole === \"member\" || this.state.currentuser.userrole === \"admin\") {\r\n            return (\r\n                <ul className=\"list-inline mb-0\">\r\n                    <li className=\"list-inline-item\"><button type=\"button\" className=\"btn btn-link\" onClick={this.goback}><i className=\"icon-chevron-left mr-2\"></i> Back</button></li>\r\n                    <li className=\"list-inline-item\"><button type=\"button\" className=\"btn btn-success btn-sm\" onClick={this.markcompleted}>Completed</button></li>\r\n                </ul>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ul className=\"list-inline mb-0\">\r\n                    <li className=\"list-inline-item\"><button type=\"button\" className=\"btn btn-link\" onClick={this.goback}><i className=\"icon-chevron-left mr-2\"></i> Back</button></li>\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n    fillOrderInformation() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-light d-flex justify-content-between\">\r\n                    <span className=\"font-size-sm text-uppercase font-weight-semibold\">Order Information <a href=\"#\">[#{this.state.order.orderid}]</a></span>\r\n                    <span className=\"font-size-sm text-uppercase text-success font-weight-semibold\">{this.state.order.orderdate}</span>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{this.state.order.orderdata}</p>\r\n                </div>\r\n\r\n                <div className=\"card-footer d-flex justify-content-between\">\r\n                    <span className=\"text-muted\">{this.state.order.orderdatecompleted}</span>\r\n                    {this.showbuttons()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    fillUserInformation() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-light d-flex justify-content-between\">\r\n                    <span className=\"font-size-sm text-uppercase font-weight-semibold\">User Information</span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">Name: {this.state.user.username} </p>\r\n                    <p className=\"card-text\">Email: {this.state.user.useremail}</p>\r\n                    <p className=\"card-text\">Phone: {this.state.user.userphone}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchcurrentuser(this.state.userid)\r\n        this.setState({ isLoading: false })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Loader loadingtype={\"User Information\"} />\r\n            );\r\n        }\r\n        else {\r\n            if (this.state.order !== undefined) {\r\n                return (\r\n                    <div className=\"content-wrapper\">\r\n                        <div className=\"content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-6\">\r\n                                    {this.fillUserInformation()}\r\n                                </div>\r\n                                <div className=\"col-xl-6\">\r\n                                    {this.fillOrderInformation()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"content-wrapper\">\r\n                        <div className=\"content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header header-elements-sm-inline\">\r\n                                            <h6 className=\"card-title\">Order Not Found</h6>\r\n                                            <div className=\"header-elements\"></div>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <p className=\"card-text\">We have encountered an error order can't be found. </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Reset\\Reset.js",["175","176"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport config from '../../config';\r\nimport engine from '../../engine';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\nimport crypto from 'crypto';\r\n\r\nexport default class Reset extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            config: config,\r\n            userid: '',\r\n            useremail: '',\r\n            userpassword: '',\r\n            username: '',\r\n            userrole: '',\r\n            error: null,\r\n            isLoading: true,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    setUser = user => {\r\n        this.setState({\r\n            userid: user[0].userid,\r\n            useremail: user[0].useremail,\r\n            userpassword: user[0].userpassword,\r\n            error: null,\r\n            isLoading: false,\r\n            redirect: true\r\n        })\r\n        bake_cookie(config.cookie_key, engine.encrypt(this.state.userid.toString()));\r\n        this.props.handleLogIn();\r\n        this.renderRedirect()\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (read_cookie(config.cookie_key).length !== 0) {\r\n            return <Redirect to='/Dashboard/' />\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        const { useremail, userpassword } = e.target;\r\n\r\n        const user = {\r\n            useremail: useremail.value.toLowerCase(),\r\n            userpassword: userpassword.value\r\n        }\r\n\r\n        this.setState({ error: null })\r\n\r\n        fetch(this.state.config.API_ENDPOINT + 'user/?useremail=' + user.useremail, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${this.state.config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n\r\n            .then(data => {\r\n                if (data.length !== 0) {\r\n                    let hexpassword = crypto.createHash('sha1').update(user.userpassword + config.API_SECURITY + data[0].userhex).digest('hex');\r\n\r\n                    if (data[0].userhexpassword === hexpassword) {\r\n                        useremail.value = '';\r\n                        userpassword.value = '';\r\n                        this.setUser(data);\r\n                    }\r\n                    else {\r\n                        this.setState({ error: \"User Information Incorrect\" });\r\n                    }\r\n                }\r\n                else {\r\n                    console.error(\"User not found!\")\r\n                    this.setState({ error: \"User not found!\" });\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error)\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    showerror = () => {\r\n        if (this.state.error != null) {\r\n            return (\r\n                <div className=\"form-group text-center\">\r\n                    {this.state.error}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderRedirect();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"page-content\">\r\n\r\n                <div className=\"content-wrapper\">\r\n\r\n                    <div className=\"content d-flex justify-content-center align-items-center\">\r\n\r\n                        <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"card mb-0\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center mb-3\">\r\n                                        <i className=\"icon-reading icon-2x text-slate-300 border-slate-300 border-3 rounded-round p-3 mb-3 mt-1\"></i>\r\n                                        <h5 className=\"mb-0\">Reset account</h5>\r\n                                        <span className=\"d-block text-muted\">Your credentials</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"E-mail Address\" id=\"useremail\" name=\"useremail\" required />\r\n                                        <div className=\"form-control-feedback\">\r\n                                            <i className=\"icon-user text-muted\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button type=\"submit\" id=\"btnLoginSubmit\" className=\"btn btn-primary btn-block\">Reset Account <i className=\"icon-circle-right2 ml-2\"></i></button>\r\n                                    </div>\r\n\r\n                                    {this.showerror()}\r\n\r\n                                    <div className=\"form-group text-center text-muted content-divider\">\r\n                                        <span className=\"px-2\">Already have an account?</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <a href=\"/SignIn\" className=\"btn btn-light btn-block\">Sign In</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group text-center text-muted content-divider\">\r\n                                        <span className=\"px-2\">Don't have an account?</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <a href=\"/SignUp\" className=\"btn btn-light btn-block\">Sign up</a>\r\n                                    </div>\r\n\r\n                                    <span className=\"form-text text-center text-muted\">By continuing, you're confirming that you've read our <a href=\"#\">Terms &amp; Conditions</a> and <a href=\"#\">Cookie Policy</a></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {this.renderRedirect()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            //<div className=\"column center\">\r\n            //    <div className=\"white\">\r\n            //        <div className=\"row center\">\r\n            //            <div className=\"col-1\">\r\n            //                <h1>Login</h1>\r\n            //                <form onSubmit={this.handleSubmit} >\r\n            //                    <input type=\"Text\" id=\"useremail\" name=\"useremail\" placeholder=\"Email Address\" title=\"Enter Phone Number\" required /><br />\r\n            //                    <input type=\"Password\" id=\"userpassword\" name=\"userpassword\" placeholder=\"Password\" title=\"Enter Pin Number\" required /><br />\r\n            //                    <button id=\"btnLoginSubmit\" className=\"black\" type=\"submit\">Sign In</button>\r\n            //                </form>\r\n            //                {this.showerror()}\r\n            //                {this.renderRedirect()}\r\n            //                <a href=\"/SignUp\"> Don't have an account? Register</a>\r\n            //            </div>\r\n            //        </div>\r\n            //    </div>\r\n            //</div>\r\n        )\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Contact\\Contact.js",["177","178","179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":47,"column":49,"nodeType":"186","endLine":47,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":75,"column":7,"nodeType":"189","endLine":75,"endColumn":112},{"ruleId":"187","severity":1,"message":"188","line":16,"column":38,"nodeType":"189","endLine":16,"endColumn":50},{"ruleId":"190","severity":1,"message":"191","line":16,"column":69,"nodeType":"189","endLine":16,"endColumn":114},{"ruleId":"187","severity":1,"message":"188","line":19,"column":10,"nodeType":"189","endLine":19,"endColumn":48},{"ruleId":"187","severity":1,"message":"188","line":84,"column":14,"nodeType":"189","endLine":84,"endColumn":119},{"ruleId":"187","severity":1,"message":"188","line":87,"column":14,"nodeType":"189","endLine":87,"endColumn":124},{"ruleId":"187","severity":1,"message":"188","line":211,"column":14,"nodeType":"189","endLine":211,"endColumn":119},{"ruleId":"187","severity":1,"message":"188","line":214,"column":14,"nodeType":"189","endLine":214,"endColumn":124},{"ruleId":"187","severity":1,"message":"188","line":244,"column":14,"nodeType":"189","endLine":244,"endColumn":119},{"ruleId":"187","severity":1,"message":"188","line":247,"column":14,"nodeType":"189","endLine":247,"endColumn":124},{"ruleId":"187","severity":1,"message":"188","line":277,"column":14,"nodeType":"189","endLine":277,"endColumn":119},{"ruleId":"187","severity":1,"message":"188","line":280,"column":14,"nodeType":"189","endLine":280,"endColumn":124},{"ruleId":"187","severity":1,"message":"188","line":310,"column":14,"nodeType":"189","endLine":310,"endColumn":119},{"ruleId":"187","severity":1,"message":"188","line":313,"column":14,"nodeType":"189","endLine":313,"endColumn":124},{"ruleId":"192","severity":1,"message":"193","line":51,"column":8,"nodeType":"189","endLine":51,"endColumn":62},{"ruleId":"187","severity":1,"message":"194","line":51,"column":8,"nodeType":"189","endLine":51,"endColumn":62},{"ruleId":"192","severity":1,"message":"193","line":52,"column":8,"nodeType":"189","endLine":52,"endColumn":60},{"ruleId":"187","severity":1,"message":"194","line":52,"column":8,"nodeType":"189","endLine":52,"endColumn":60},{"ruleId":"192","severity":1,"message":"193","line":53,"column":8,"nodeType":"189","endLine":53,"endColumn":60},{"ruleId":"187","severity":1,"message":"194","line":53,"column":8,"nodeType":"189","endLine":53,"endColumn":60},{"ruleId":"192","severity":1,"message":"193","line":155,"column":8,"nodeType":"189","endLine":155,"endColumn":62},{"ruleId":"187","severity":1,"message":"194","line":155,"column":8,"nodeType":"189","endLine":155,"endColumn":62},{"ruleId":"192","severity":1,"message":"193","line":156,"column":8,"nodeType":"189","endLine":156,"endColumn":60},{"ruleId":"187","severity":1,"message":"194","line":156,"column":8,"nodeType":"189","endLine":156,"endColumn":60},{"ruleId":"192","severity":1,"message":"193","line":157,"column":8,"nodeType":"189","endLine":157,"endColumn":60},{"ruleId":"187","severity":1,"message":"194","line":157,"column":8,"nodeType":"189","endLine":157,"endColumn":60},{"ruleId":"187","severity":1,"message":"188","line":277,"column":8,"nodeType":"189","endLine":277,"endColumn":113},{"ruleId":"187","severity":1,"message":"188","line":290,"column":7,"nodeType":"189","endLine":290,"endColumn":111},{"ruleId":"187","severity":1,"message":"188","line":291,"column":7,"nodeType":"189","endLine":291,"endColumn":106},{"ruleId":"187","severity":1,"message":"188","line":292,"column":7,"nodeType":"189","endLine":292,"endColumn":105},{"ruleId":"192","severity":1,"message":"193","line":306,"column":8,"nodeType":"189","endLine":306,"endColumn":62},{"ruleId":"187","severity":1,"message":"194","line":306,"column":8,"nodeType":"189","endLine":306,"endColumn":62},{"ruleId":"187","severity":1,"message":"188","line":314,"column":8,"nodeType":"189","endLine":314,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":320,"column":8,"nodeType":"189","endLine":320,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":327,"column":8,"nodeType":"189","endLine":327,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":334,"column":8,"nodeType":"189","endLine":334,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":343,"column":8,"nodeType":"189","endLine":343,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":350,"column":8,"nodeType":"189","endLine":350,"endColumn":41},{"ruleId":"192","severity":1,"message":"193","line":368,"column":8,"nodeType":"189","endLine":368,"endColumn":62},{"ruleId":"187","severity":1,"message":"194","line":368,"column":8,"nodeType":"189","endLine":368,"endColumn":62},{"ruleId":"187","severity":1,"message":"188","line":379,"column":9,"nodeType":"189","endLine":379,"endColumn":110},{"ruleId":"187","severity":1,"message":"188","line":380,"column":9,"nodeType":"189","endLine":380,"endColumn":110},{"ruleId":"187","severity":1,"message":"188","line":381,"column":9,"nodeType":"189","endLine":381,"endColumn":110},{"ruleId":"184","severity":1,"message":"185","line":154,"column":103,"nodeType":"186","endLine":154,"endColumn":119},{"ruleId":"187","severity":1,"message":"188","line":176,"column":142,"nodeType":"189","endLine":176,"endColumn":154},{"ruleId":"187","severity":1,"message":"188","line":176,"column":185,"nodeType":"189","endLine":176,"endColumn":197},{"ruleId":"195","severity":1,"message":"196","line":1,"column":1,"nodeType":"197","endLine":36,"endColumn":2},{"ruleId":"195","severity":1,"message":"196","line":1,"column":1,"nodeType":"197","endLine":7,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":170,"column":142,"nodeType":"189","endLine":170,"endColumn":154},{"ruleId":"187","severity":1,"message":"188","line":170,"column":185,"nodeType":"189","endLine":170,"endColumn":197},{"ruleId":"180","replacedBy":"198"},{"ruleId":"182","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":13},{"ruleId":"204","severity":1,"message":"205","line":114,"column":35,"nodeType":"206","messageId":"207","endLine":114,"endColumn":37},{"ruleId":"204","severity":1,"message":"208","line":128,"column":58,"nodeType":"206","messageId":"209","endLine":128,"endColumn":60},{"ruleId":"187","severity":1,"message":"188","line":172,"column":106,"nodeType":"189","endLine":172,"endColumn":118},{"ruleId":"187","severity":1,"message":"188","line":160,"column":142,"nodeType":"189","endLine":160,"endColumn":154},{"ruleId":"187","severity":1,"message":"188","line":160,"column":185,"nodeType":"189","endLine":160,"endColumn":197},{"ruleId":"200","severity":1,"message":"210","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":18},{"ruleId":"200","severity":1,"message":"211","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"212","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":21},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["213"],["214"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Redirect' is defined but never used.","'config' is defined but never used.","'read_cookie' is defined but never used.","no-global-assign","no-unsafe-negation"]