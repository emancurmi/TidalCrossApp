[{"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\index.js":"1","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\App.js":"2","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\reportWebVitals.js":"3","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Nav\\Nav.js":"5","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Footer\\Footer.js":"6","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Home\\Home.js":"7","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Profile\\Profile.js":"8","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignUp\\SignUp.js":"9","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignOut\\SignOut.js":"10","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\engine.js":"11","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\config.js":"12","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignIn\\SignIn.js":"13","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Admin\\Admin.js":"14","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\User\\User.js":"15","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Member\\Member.js":"16","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Loader\\Loader.js":"17","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Dashboard\\Dashboard.js":"18","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\NotFoundPage\\NotFoundPage.js":"19","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\CreateOrderForm\\CreateOrderForm.js":"20","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrdersList\\OrdersList.js":"21","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Order\\Order.js":"22","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrderListItem\\OrderListItem.js":"23"},{"size":272,"mtime":1609768199743,"results":"24","hashOfConfig":"25"},{"size":1769,"mtime":1611780440724,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":186,"mtime":1611246747996,"results":"28","hashOfConfig":"25"},{"size":2227,"mtime":1611780440962,"results":"29","hashOfConfig":"25"},{"size":2353,"mtime":1611246569042,"results":"30","hashOfConfig":"25"},{"size":8201,"mtime":1611246702371,"results":"31","hashOfConfig":"25"},{"size":1359,"mtime":1610123315827,"results":"32","hashOfConfig":"25"},{"size":4306,"mtime":1611866667358,"results":"33","hashOfConfig":"25"},{"size":806,"mtime":1611780440895,"results":"34","hashOfConfig":"25"},{"size":1011,"mtime":1609768199644,"results":"35","hashOfConfig":"25"},{"size":240,"mtime":1611866752182,"results":"36","hashOfConfig":"25"},{"size":4030,"mtime":1611780440908,"results":"37","hashOfConfig":"25"},{"size":1182,"mtime":1611246181668,"results":"38","hashOfConfig":"25"},{"size":2047,"mtime":1611780440997,"results":"39","hashOfConfig":"25"},{"size":3941,"mtime":1611780441045,"results":"40","hashOfConfig":"25"},{"size":393,"mtime":1610159531375,"results":"41","hashOfConfig":"25"},{"size":2959,"mtime":1611780441015,"results":"42","hashOfConfig":"25"},{"size":653,"mtime":1610160718582,"results":"43","hashOfConfig":"25"},{"size":4590,"mtime":1611780440982,"results":"44","hashOfConfig":"25"},{"size":3620,"mtime":1611780441029,"results":"45","hashOfConfig":"25"},{"size":3691,"mtime":1611780440950,"results":"46","hashOfConfig":"25"},{"size":1619,"mtime":1611780440919,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"qllw1c",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\index.js",[],["103","104"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\App.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\reportWebVitals.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Nav\\Nav.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Home\\Home.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Profile\\Profile.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignUp\\SignUp.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignOut\\SignOut.js",["105"],"import React, { Component } from 'react';\r\nimport { delete_cookie } from 'sfcookies';\r\nimport { Redirect } from 'react-router-dom';\r\nimport config from '../../config';\r\n\r\nexport default class SignOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            updatesstate : ''\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updatestate: 'update'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"column center\">\r\n                <div className=\"linear-dark\">\r\n                    <div className=\"row center\">\r\n                        <div className=\"col-1\">\r\n                {\r\n                    delete_cookie(config.cookie_key)\r\n                }\r\n                <Redirect to='/' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}  ","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\engine.js",["106"],"export default {\r\n\r\n    encrypt(content) {\r\n        let result = [];\r\n        let passcode = \"FUtruJistob\";\r\n        let passLen = passcode.length;\r\n\r\n\r\n        for (let i = 0; i < content.length; i++) {\r\n            let passOffset = i % passLen;\r\n            let calAscii = (content.charCodeAt(i) + passcode.charCodeAt(passOffset));\r\n            result.push(calAscii);\r\n        }\r\n\r\n        return JSON.stringify(result);\r\n    },\r\n\r\n    decrypt(content) {\r\n        let result = [];\r\n        let str = '';\r\n        let passcode = \"FUtruJistob\";\r\n        let codesArr = JSON.parse(content);\r\n        let passLen = passcode.length;\r\n\r\n\r\n        for (let i = 0; i < codesArr.length; i++) {\r\n            let passOffset = i % passLen;\r\n            let calAscii = (codesArr[i] - passcode.charCodeAt(passOffset));\r\n            result.push(calAscii);\r\n        }\r\n        for (let i = 0; i < result.length; i++) {\r\n            let ch = String.fromCharCode(result[i]); str += ch;\r\n        }\r\n        return str;\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\config.js",["107"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\SignIn\\SignIn.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Admin\\Admin.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\User\\User.js",["108","109"],"import React, { Component } from 'react';\r\nimport config from '../../config';\r\nimport Loader from '../Loader/Loader';\r\nimport { read_cookie } from 'sfcookies';\r\nimport CreateOrderForm from '../CreateOrderForm/CreateOrderForm';\r\nimport engine from '../../engine';\r\nimport OrdersList from '../OrdersList/OrdersList';\r\n\r\nexport default class User extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            userid: engine.decrypt(read_cookie(config.cookie_key)),\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    showerror = () => {\r\n        if (this.state.error != null) {\r\n            return (<p>{this.state.error}</p>);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setIsLoading();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Loader loadingtype={\"User Information\"} />\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"light\">\r\n                    <div className=\"column content\">\r\n                        <div className=\"row center\">\r\n                            <div className=\"col-1\">\r\n                                <h1>Welcome User</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-2\">\r\n                                <h3>Current Orders</h3>\r\n                                <OrdersList userid={this.state.userid} />\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <h3>Create New Order</h3>\r\n                                <CreateOrderForm />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Member\\Member.js",["110"],"import React, { Component } from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport OrderList from '../OrdersList/OrdersList';\r\nimport config from '../../config';\r\nimport engine from '../../engine';\r\nimport { read_cookie } from 'sfcookies';\r\n\r\nexport default class Member extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            userid: engine.decrypt(read_cookie(config.cookie_key)),\r\n            useremail: '',\r\n            username: '',\r\n            userrole: '',\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    showerror = () => {\r\n        if (this.state.error != null) {\r\n            return (<p>{this.state.error}</p>);\r\n        }\r\n    }\r\n\r\n    setUser() {\r\n        fetch(config.API_ENDPOINT + 'user/' + this.state.userid, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n\r\n            .then(user => {\r\n                if (user.length !== 0) {\r\n\r\n                    this.setState({\r\n                        userid: user[0].userid,\r\n                        useremail: user[0].useremail,\r\n                        userrole: user[0].userrole,\r\n                        error: null,\r\n                        isLoading: false,\r\n                    })\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error)\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setUser();\r\n        this.setIsLoading();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Loader loadingtype={\"Member Information\"} />\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"column center\">\r\n                    <h1>Welcome Member</h1>\r\n                    <OrderList />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Loader\\Loader.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\NotFoundPage\\NotFoundPage.js",[],["111","112"],"C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\CreateOrderForm\\CreateOrderForm.js",["113"],"import React, { Component } from 'react';\r\nimport config from '../../config';\r\nimport engine from '../../engine';\r\nimport { read_cookie } from 'sfcookies';\r\nimport Loader from '../Loader/Loader';\r\nimport moment from 'moment';\r\n\r\nexport default class CreateOrderForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userid : engine.decrypt(read_cookie(config.cookie_key)),\r\n            selectedshop:\r\n            {\r\n                shopid: 0,\r\n                shopname: 'Select Shop'\r\n            },\r\n            shops: [],\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: data\r\n        })\r\n    }\r\n\r\n    setShopData = data => {\r\n        this.setState({\r\n            shops: data\r\n        })\r\n    }\r\n\r\n    fetchshops = () => {\r\n        this.setIsLoading(true);\r\n\r\n        fetch(config.API_ENDPOINT + 'user/?userrole=member', {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': `Bearer ${config.API_TOKEN}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return res.json().then(error => Promise.reject(error))\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                this.setShopData(data)\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n\r\n        this.setIsLoading(false);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { orderbox } = e.target;\r\n        const order = {\r\n            ordershopid: this.state.selectedshop.shopid,\r\n            orderuserid: parseInt(this.state.userid),\r\n            orderdata: orderbox.value,\r\n            orderstatus: \"Pending\",\r\n            orderdate: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n            orderdatecompleted: null\r\n        }\r\n        \r\n        if (order.ordershopid === 0) {\r\n            this.setState({ error: \"Select Shop\" });\r\n        }\r\n        else {\r\n            console.log(order);\r\n            fetch(config.API_ENDPOINT + 'order/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(order),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'authorization': `bearer ${config.API_TOKEN}`\r\n                }\r\n            })\r\n\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        return res.json().then(error => Promise.reject(error));\r\n                    }\r\n                    return res.json();\r\n                })\r\n\r\n                .catch(error => {\r\n                    this.setState({ error })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    handleShopSelect = (e) => {\r\n        const shopSel = e.target.value;\r\n        this.state.shops.map(shop => {\r\n            if (shop.username === shopSel) {\r\n                this.setState({\r\n                    selectedshop: {\r\n                        shopid: shop.userid,\r\n                        shopname: shop.username\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        console.log(this.state.selectedshop);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchshops();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Loader loadingtype={\"Loading Form\"} />\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <select\r\n                        name=\"Countries\"\r\n                        onChange={e => this.handleShopSelect(e)}\r\n                        value={this.state.selectedshop.shopname}\r\n                    >\r\n                        <option value=\"\">Select the Shop</option>\r\n                        {this.state.shops.map((shop, key) => (\r\n                            <option key={key} value={shop.username}>\r\n                                {shop.username}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <br />\r\n                    <textarea type=\"text\" id=\"orderbox\" name=\"orderbox\" placeholder=\"Order\" title=\"Enter Order Information\" rows=\"5\" cols=\"60\" required /><br />\r\n                    <button id=\"btnOrderSubmit\" className=\"blue\" type=\"submit\">Make Order</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrdersList\\OrdersList.js",["114"],"import React, { Component } from 'react';\r\n\r\n\r\nexport default class OrderList extends Component {\r\n\r\n    orders = [\r\n    { id: 1, userid: 1, order: 'Malta', status: 'Completed', date: \"2/1/2020\", datecompleted: \"5/1/2020\" },\r\n    { id: 2, userid: 2, order: 'Aland Islands', stats: 'Pending', date: \"2/1/2020\", datecompleted: \"\" },\r\n    { id: 3, userid: 1, order: 'Albania', staus: 'Completed', date: \"2/1/2020\", datecompleted: \"6/1/2020\" }\r\n];\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            orders: [{\r\n                id: 0,\r\n                username: 0,\r\n                order: '',\r\n                status: '',\r\n                date: '',\r\n                datecompleted: '',\r\n            }],\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    fetchorders = () => {\r\n        let orderstostate = [];\r\n        this.orders.map(order => {\r\n            let x = { id: order.id, username: this.fetchuser(order.userid), order: order.order, status: order.status, date: order.date, datecompleted: order.datecompleted };\r\n            orderstostate = orderstostate + x;\r\n        })\r\n\r\n        this.setState({\r\n            orders: orderstostate\r\n        });\r\n\r\n    }\r\n\r\n    fetchuser = (userid) => {\r\n        let users = [{ id: 1, username: \"Mike\" }, { id: 2, username: \"John\" }, { id: 3, username: \"Ryan\" }]\r\n        let founduser = { id:0, username: \"\" };\r\n        users.map(user => {\r\n            if (user.id === userid) {\r\n                founduser.id = user.id;\r\n                founduser.username = user.username;\r\n            }\r\n            console.log(founduser);\r\n            return founduser;\r\n        })\r\n\r\n    }\r\n\r\n    generateorderlist = () => {\r\n        if (this.state.orders.map !== 0) {\r\n            this.state.orders.map(order => {\r\n                return (\r\n                    <p>\r\n                        <a href={\"/order/\" + order.id} alt={order.id} className={order.status} key={order.id}> {order.userid + '-' + order.date} </a>\r\n                    </p>\r\n                )\r\n            })\r\n        }\r\n        this.setState({ isLoading: false });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchorders();\r\n    }\r\n    \r\n    order = () => {\r\n    this.state.orders.map(order => {\r\n                                return (\r\n                                    <div className=\"row center\">\r\n                                        <div className=\"col-2\">\r\n                                            <a href={\"/order/\" + order.id} alt={order.id} className={order.status} key={order.id}> {order.username}  </a>\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            {order.date}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"white\">\r\n                <div className=\"column center\">\r\n                    <div className=\"row center\">\r\n                        <div className=\"col-1\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\Order\\Order.js",["115","116","117"],"import React, { Component } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport config from '../../config';\r\nimport Loader from '../Loader/Loader';\r\n\r\nexport default class OrderList extends Component {\r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            order: this.props.order,\r\n\r\n            user: this.props.user,\r\n\r\n            error: null,\r\n            isLoading: true,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    setIsLoading = data => {\r\n        this.setState({\r\n            isLoading: data\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: false })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.order !== undefined & this.state.user !== undefined) {\r\n            return (\r\n\r\n                <div className=\"light\">\r\n                    <div className=\"column content\">\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-1\">\r\n                                <h3>User Information</h3>\r\n                                <p>Name:{this.state.user.username}</p>\r\n                                <p>Email:{this.state.user.useremail}</p>\r\n                                <p>Phone:{this.state.user.userphone}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-1\">\r\n                                <h3>Order Information</h3>\r\n                                <p>Order:{this.state.order.orderdata}</p>\r\n                                <p>Date:{this.state.order.orderdate}</p>\r\n                                <p>DateCompleted:{this.state.order.orderdatecompleted}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-1\">\r\n                                <button id=\"btnBack\" className=\"black\" type=\"submit\" onClick=\"\">Back</button>\r\n                                <button id=\"btnMarkCompleted\" className=\"black\" type=\"submit\" onClick=\"\">Mark Completed</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"light\">\r\n                    <div className=\"column content\">\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-1\">\r\n                                <h3>User Information</h3>\r\n                                <p>Name:</p>\r\n                                <p>Email:</p>\r\n                                <p>Phone:</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-1\">\r\n                                <h3>Order Information</h3>\r\n                                <p>Order:</p>\r\n                                <p>Date:</p>\r\n                                <p>DateCompleted:</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row content\">\r\n                            <div className=\"col-1\">\r\n                                <button id=\"btnBack\" className=\"black\" type=\"submit\">Back</button>\r\n                                <button id=\"btnMarkCompleted\" className=\"black\" type=\"submit\">Mark Completed</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","C:\\Users\\Eman\\source\\repos\\emancurmi\\tidalcrossapp\\src\\Components\\OrderListItem\\OrderListItem.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":7,"column":5,"nodeType":"124","messageId":"125","endLine":9,"endColumn":6},{"ruleId":"126","severity":1,"message":"127","line":1,"column":1,"nodeType":"128","endLine":36,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":1,"column":1,"nodeType":"128","endLine":6,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":18},{"ruleId":"129","severity":1,"message":"133","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":23},{"ruleId":"129","severity":1,"message":"134","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":17},{"ruleId":"118","replacedBy":"135"},{"ruleId":"120","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":106,"column":35,"nodeType":"139","messageId":"140","endLine":106,"endColumn":37},{"ruleId":"137","severity":1,"message":"141","line":99,"column":58,"nodeType":"139","messageId":"142","endLine":99,"endColumn":60},{"ruleId":"129","severity":1,"message":"143","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"144","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"145","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CreateOrderForm' is defined but never used.","'OrderList' is defined but never used.",["146"],["147"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useLocation' is defined but never used.","'config' is defined but never used.","'Loader' is defined but never used.","no-global-assign","no-unsafe-negation"]